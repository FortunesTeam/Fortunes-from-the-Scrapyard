<?xml version="1.0"?>
<doc>
    <assembly>
        <name>R2API.Rules</name>
    </assembly>
    <members>
        <member name="T:R2API.ExtendedRuleChoiceDef">
            <summary>
            Represents an Extended version of a RuleChoiceDef
            Unlike regular RuleChoiceDefs, an ExtendedRulechoiceDef can have multiple requirements, such as multiple expansions or multiple unlockables required.
            <para>Utilize these collections instead of the singular requirements</para>
            </summary>
        </member>
        <member name="F:R2API.ExtendedRuleChoiceDef.requiredUnlockables">
            <summary>
            The Unlockables required for this rule choice to be enabled
            </summary>
        </member>
        <member name="F:R2API.ExtendedRuleChoiceDef.requiredChoiceDefs">
            <summary>
            The RuleChoiceDefs that need to be enabled for this rule choice to be enabled
            </summary>
        </member>
        <member name="F:R2API.ExtendedRuleChoiceDef.requiredEntitlementDefs">
            <summary>
            The EntitlementDefs that the players in the lobby need to have for this rule choice to be enabled
            </summary>
        </member>
        <member name="F:R2API.ExtendedRuleChoiceDef.requiredExpansionDefs">
            <summary>
            The ExpansionDefs that need to be enabled for this rule choice to be enabled.
            </summary>
        </member>
        <member name="T:R2API.PreGameControllerHelper">
            <summary>
            A class with helper methods that are used for the Rules submodule
            </summary>
        </member>
        <member name="T:R2API.RuleCatalogExtras">
            <summary>
            A class for adding new RuleDefs and RuleCategories to the game's RuleCatalog
            </summary>
        </member>
        <member name="F:R2API.RuleCatalogExtras.PluginGUID">
            <summary>
            The Rules submodule's plugin GUID
            </summary>
        </member>
        <member name="F:R2API.RuleCatalogExtras.PluginName">
            <summary>
            The Rules submodule's plugin name
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.DifficultyCategoryIndex">
            <summary>
            An index that represents the Difficulty RuleCategoryDef Index
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.ExpansionsCategoryIndex">
            <summary>
            An index that represents the Expansions RuleCategoryDef Index
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.ArtifactsCategoryIndex">
            <summary>
            An index that represents the Artifacts RuleCategoryDef Index
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.ItemsCategoryIndex">
            <summary>
            An index that represents the Items RuleCategoryDef index, hidden by default
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.EquipmentsCategoryIndex">
            <summary>
            An index that represents the Equipments RuleCategoryDef index, hidden by default
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.MiscCategoryIndex">
            <summary>
            An index that represents the Misc RuleCategoryDef index, hidden by default
            </summary>
        </member>
        <member name="P:R2API.RuleCatalogExtras.TotalVanillaCategories">
            <summary>
            Note for developers/maintainers, this number represents the total vanilla categories in the game, this is used to giveproper indices to new rules added by the submodule
            </summary>
        </member>
        <member name="M:R2API.RuleCatalogExtras.AddCategory(RoR2.RuleCategoryDef)">
            <summary>
            Adds a new category to the RuleCatalog
            </summary>
            <param name="category">The category to add</param>
            <returns>An index that represents this category's index in the catalog.</returns>
        </member>
        <member name="M:R2API.RuleCatalogExtras.AddRuleToCatalog(RoR2.RuleDef,System.Int32)">
            <summary>
            Adds a new Rule to the RuleCatalog
            </summary>
            <param name="ruleDef">The RuleDef to add</param>
            <param name="ruleCategoryDefIndex">An index that represents which Category to add the <paramref name="ruleDef"/>, this can be either the integer returned by <see cref="M:R2API.RuleCatalogExtras.AddCategory(RoR2.RuleCategoryDef)"/>, or one of the static integer properties, such as <see cref="P:R2API.RuleCatalogExtras.DifficultyCategoryIndex"/></param>
        </member>
        <member name="M:R2API.RuleCatalogExtras.FindCustomRuleDef(System.String)">
            <summary>
            Finds a custom ruleDef by comparing the ruleDef's global name with <paramref name="ruleDefGlobalName"/>
            </summary>
            <param name="ruleDefGlobalName">The global name of the ruleDef to find</param>
            <returns>The rule def, null if it wasnt found</returns>
        </member>
        <member name="M:R2API.RuleCatalogExtras.FindCustomChoiceDef(System.String)">
            <summary>
            Finds a custom RuleChoiceDef by comparing the ruleChoiceDef's global name with <paramref name="ruleChoiceDefGlobalName"/>
            </summary>
            <param name="ruleChoiceDefGlobalName">The global name of the rule choice def to find</param>
            <returns>The rule choice def, null if it wasnt found</returns>
        </member>
        <member name="F:R2API.RuleCatalogExtras.PluginVersion">
            <summary>
            Version of the plugin, should be matching with the thunderstore package.
            </summary>
        </member>
        <member name="T:R2API.RulesExtensions">
            <summary>
            Extensions that the Rules submodule uses
            </summary>
        </member>
        <member name="M:R2API.RulesExtensions.AddExtendedRuleChoiceDef(RoR2.RuleDef,System.String,System.Object,System.Boolean)">
            <summary>
            Adds a new ExtendedRuleChoiceDef to a RuleDef
            </summary>
            <param name="ruleDef">The RuleDef being modified</param>
            <param name="choiceName">The Rulechoice's name</param>
            <param name="extraData">Extra data that's passed into the ExtendedRuleChoiceDef</param>
            <param name="excludeByDefault">Wether this rulechoiceDef is excluded by default</param>
            <returns>The newely created and added ExtendedRuleChoiceDef</returns>
        </member>
        <member name="M:R2API.RulesExtensions.TryCastToExtendedRuleChoiceDef(RoR2.RuleChoiceDef,R2API.ExtendedRuleChoiceDef@)">
            <summary>
            Attempts to cast a RuleChoiceDef into an ExtendedRulechoiceDef
            </summary>
            <param name="choice">The RuleChoiceDef to attempt to cast</param>
            <param name="extendedRuleChoiceDef">The casted RuleChoiceDef, null if the returned value is false</param>
            <returns>True if the cast was succesful, false otherwise.</returns>
        </member>
        <member name="T:R2API.AutoVersionGen.AutoVersionAttribute">
            <summary>
            Add a PluginVersion field to the attribut-ed class filled from the thunderstore.toml versionNumber field
            </summary>
        </member>
    </members>
</doc>
